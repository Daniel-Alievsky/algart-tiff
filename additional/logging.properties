handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
.level=FINE
# - Possible values are "java.util.logging" levels:
#       SEVERE      (ERROR   in terms of System.Logger)
#       WARNING     (WARNING in terms of System.Logger)
#       INFO/CONFIG (INFO    in terms of System.Logger)
#       FINE        (DEBUG   in terms of System.Logger)
#       FINER       (TRACE   in terms of System.Logger)
#       FINEST/ALL  (ALL in terms of System.Logger)
# Note: CONFIG level works like INFO while using System.Logger;
# so, you should use FINE level as the next alternative after INFO

jakarta.json.level=INFO
org.scijava.event.level=INFO
# - Usually the main settings ".level" should be clarified for these packages.
# If ".level" is FINE (or more detailed), these modules usually print too many messages;
# if ".level" is CONFIG, it is good for these modules, but for System.Logger it is equivalent to INFO.
sun.rmi.level=INFO
javax.management.remote.rmi.level=INFO
# - These modules also print many messages in IntelliJ IDEA (it automatically starts a parallel thread printing them)

# File logging:
java.util.logging.FileHandler.pattern=%t/_executors_/logs/executors_%g.log
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level=FINER
# Console logging:
java.util.logging.ConsoleHandler.level=FINER
# - Level FINER means that all will depend on ".level" above.
# If ".level" is more detailed than FINER, these last levels must be also changed.